class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
    
    if (n <= 1) {
        return 0;
    }
    
    int jumps = 1;
    int curr_max_reach = nums[0];
    int next_max_reach = nums[0];
    
    for (int i = 1; i < n; i++) {
        if (i > curr_max_reach) {
            jumps++;
            curr_max_reach = next_max_reach;
        }
        
        next_max_reach = std::max(next_max_reach, i + nums[i]);
    }
    
    return jumps;
    }
};
