class Solution {
  public:
    
      int minSteps(int A[], int N, int K) {

       sort(A,A+N);

       int prefix[N];

       prefix[0]=A[0];

       for(int i=1;i<N;i++)

            prefix[i]=prefix[i-1]+A[i];

       int ans=INT_MAX,prev=0;

       for(int i=0;i<N;i++)

       {

           int c=1;

           while(i+1<N && A[i]==A[i+1])

            {

                c++;

                i++;

                continue;

            }

           int permissible=A[i]+K;

           int idx=upper_bound(A,A+N,permissible)-A;

           int actualsum=prefix[N-1]-prefix[idx-1];

           int reduce= (N-idx)*permissible;

           actualsum-=reduce;

           ans=min(ans,actualsum+prev);

           prev+=(A[i]*c);

       }

       return ans;

      }
};
    
