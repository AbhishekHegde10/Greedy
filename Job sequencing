bool comp(Job j1,Job j2)
{
    return j1.profit>j2.profit;
}

class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    {   sort(arr,arr+n,comp);
        int deadline=0;
        for(int i=0;i<n;i++)
            deadline=max(deadline,arr[i].dead);
        bool flag[deadline+1]={false};
        int jobs=0,pf=0;
        vector<int>ans;
        for(int i=0;i<n;i++)
        {
            for(int j=arr[i].dead;j>0;j--)
            {
                if(flag[j]==false)
                {
                    flag[j]=true;
                    pf+=arr[i].profit;
                    jobs++;
                    break;
                }
            }
        }
        ans.push_back(jobs),ans.push_back(pf);
        return ans;
    } 
};
